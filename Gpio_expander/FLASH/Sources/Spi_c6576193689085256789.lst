Decoder V-5.0.33 Build 14019, Jan 20 2014
Options: -ArgFileSources/Spi_c.args -Env"GENPATH=D:/workspace/Gpio_expander/Project_Headers;C:\Freescale\CW MCU v10.7\eclipse\../MCU/lib/hc08c/device/src;C:\Freescale\CW MCU v10.7\eclipse\../MCU/lib/hc08c/lib;C:\Freescale\CW MCU v10.7\eclipse\../MCU/lib/hc08c/src;C:\Freescale\CW MCU v10.7\eclipse\../MCU/lib/hc08c/device/include;C:\Freescale\CW MCU v10.7\eclipse\../MCU/lib/hc08c/include;C:\Freescale\CW MCU v10.7\eclipse\../MCU/lib/hc08c/device/asm_include;D:/workspace/Gpio_expander/Generated_Code;D:/workspace/Gpio_expander/Sources" -EnvOBJPATH=. -EnvTEXTPATH=. -OSources\Spi_c.lst -ViewHidden -WmsgFob"%f%e:%l:%k:%d %m\n"
Decoding File: 'Sources\Spi_c.obj'
File format: ELF/DWARF

DISASSEMBLY OF: '.text' FROM 632 TO 999 SIZE 367 (0X16F)
Opening source file 'D:/workspace/Gpio_expander\Sources\Spi.c'
   10: void spi_init(void){
spi_init:
00000000 1A00     BSET   5,PTBDD
   12:   PTADD_PTADD2=1;
00000002 1400     BSET   2,PTADD
   13:   SPIBR=0x00;
00000004 3F00     CLR    SPIBR
   14:   SPIC2_MODFEN=0;
00000006 1900     BCLR   4,SPIC2
   15:   SPIC1_SSOE=0;
00000008 1300     BCLR   1,SPIC1
   16:   SPIC1_CPHA=1;
0000000A 1400     BSET   2,SPIC1
   17:   SPIC1_CPOL=1;
0000000C 1600     BSET   3,SPIC1
   18:   SPIC1_MSTR=1;
0000000E 1800     BSET   4,SPIC1
   19:   SPIC1_SPE=1;
00000010 1C00     BSET   6,SPIC1
   20:   PTBPE_PTBPE4=1;
00000012 C60000   LDA    PTBPE
00000015 AA10     ORA    #0x10
00000017 C70000   STA    PTBPE
   21:   PTBD_PTBD5=1;
0000001A 1A00     BSET   5,PTBD
   23: }
0000001C 81       RTS    
   25: void init_spi_buffer(spi *spi_buffer,unsigned char *buffer,unsigned char nb_data){
init_spi_buffer:
0000001D 89       PSHX   
0000001E 8B       PSHH   
0000001F 87       PSHA   
00000020 A7FE     AIS    #-2
   26:   unsigned char n=0,i=0;
00000022 9E6F02   CLR    2,SP
00000025 9E6F01   CLR    1,SP
   27:   spi_buffer->p_read=NULL;
00000028 9EFE08   LDHX   8,SP
0000002B 6F0E     CLR    14,X
0000002D 6F0F     CLR    15,X
   28:   spi_buffer->p_write=NULL;
0000002F 6F0C     CLR    12,X
00000031 6F0D     CLR    13,X
   29:   for (i = 0; i < NB_DATA; ++i) {
00000033 9E6F01   CLR    1,SP
00000036 2017     BRA    *+25       ;abs = 0x004F
   30:       spi_buffer->buffer[i]=0;
00000038 9EFE08   LDHX   8,SP
0000003B 9EE601   LDA    1,SP
0000003E 9F       TXA    
0000003F 9EEB01   ADD    1,SP
00000042 5F       CLRX   
00000043 87       PSHA   
00000044 8B       PSHH   
00000045 86       PULA   
00000046 A900     ADC    #0x00
00000048 87       PSHA   
00000049 8A       PULH   
0000004A 88       PULX   
0000004B 7F       CLR    ,X
   29:   for (i = 0; i < NB_DATA; ++i) {
0000004C 9E6C01   INC    1,SP
0000004F 9EEE01   LDX    1,SP
00000052 8C       CLRH   
00000053 65000C   CPHX   #0x000C
00000056 91E0     BLT    *-30       ;abs = 0x0038
   32:   for (i=0; i<nb_data; ++i) {
00000058 9E6F01   CLR    1,SP
0000005B 2027     BRA    *+41       ;abs = 0x0084
   33:       spi_buffer->buffer[i]=buffer[i];
0000005D 9EFE08   LDHX   8,SP
00000060 9EE601   LDA    1,SP
00000063 9F       TXA    
00000064 9EEB01   ADD    1,SP
00000067 5F       CLRX   
00000068 87       PSHA   
00000069 8B       PSHH   
0000006A 86       PULA   
0000006B A900     ADC    #0x00
0000006D 87       PSHA   
0000006E 9EE603   LDA    3,SP
00000071 9EEB07   ADD    7,SP
00000074 87       PSHA   
00000075 4F       CLRA   
00000076 9EE907   ADC    7,SP
00000079 87       PSHA   
0000007A 8A       PULH   
0000007B 88       PULX   
0000007C FE       LDX    ,X
0000007D 8A       PULH   
0000007E 9F       TXA    
0000007F 88       PULX   
00000080 F7       STA    ,X
   32:   for (i=0; i<nb_data; ++i) {
00000081 9E6C01   INC    1,SP
00000084 9EE601   LDA    1,SP
00000087 87       PSHA   
00000088 4F       CLRA   
00000089 87       PSHA   
0000008A 9EE605   LDA    5,SP
0000008D 5F       CLRX   
0000008E CD0000   JSR    ICMP
00000091 92CA     BGT    *-52       ;abs = 0x005D
   35:   spi_buffer->p_read=spi_buffer->buffer;
00000093 9EFE08   LDHX   8,SP
00000096 8B       PSHH   
00000097 86       PULA   
00000098 E70E     STA    14,X
0000009A EF0F     STX    15,X
   36:   spi_buffer->p_write=&(spi_buffer->buffer[5]);
0000009C AF05     AIX    #5
0000009E 89       PSHX   
0000009F 8B       PSHH   
000000A0 9EFE0A   LDHX   10,SP
000000A3 9EE602   LDA    2,SP
000000A6 E70D     STA    13,X
000000A8 86       PULA   
000000A9 E70C     STA    12,X
   37:   spi_buffer->nb_data=nb_data;
000000AB 9EE604   LDA    4,SP
000000AE E710     STA    16,X
000000B0 A701     AIS    #1
   38: }
000000B2 A705     AIS    #5
000000B4 81       RTS    
   41: void spi_transfer(spi *spi_buffer){
spi_transfer:
000000B5 89       PSHX   
000000B6 8B       PSHH   
   42:   PTBD_PTBD5=0;
000000B7 1B00     BCLR   5,PTBD
   43:   while (spi_buffer->nb_data!=0){
000000B9 CC008E   JMP    spi_transfer
   44:       if (SPIS_SPTEF) {
000000BC 0B000E   BRCLR  5,SPIS,SPIS
   45:           SPID=*spi_buffer->p_read;
000000BF 9EFE01   LDHX   1,SP
000000C2 9ECE0E   LDHX   14,X
000000C5 7E00     MOV    X+,SPID
   46:           delai(35);
000000C7 AE23     LDX    #0x23
000000C9 8C       CLRH   
000000CA CD0000   JSR    delai
   48:       if((spi_buffer->p_read++)==(&spi_buffer->buffer[NB_DATA-8])){
000000CD 9EFE01   LDHX   1,SP
000000D0 9ECE0E   LDHX   14,X
000000D3 89       PSHX   
000000D4 8B       PSHH   
000000D5 AF01     AIX    #1
000000D7 9F       TXA    
000000D8 8B       PSHH   
000000D9 9EFE04   LDHX   4,SP
000000DC E70F     STA    15,X
000000DE 86       PULA   
000000DF E70E     STA    14,X
000000E1 AF04     AIX    #4
000000E3 9EE602   LDA    2,SP
000000E6 87       PSHA   
000000E7 9EE602   LDA    2,SP
000000EA 87       PSHA   
000000EB 9F       TXA    
000000EC 8B       PSHH   
000000ED 88       PULX   
000000EE CD0000   JSR    ICMP
000000F1 A701     AIS    #1
000000F3 A701     AIS    #1
000000F5 2609     BNE    *+11       ;abs = 0x0100
   49:           spi_buffer->p_read=spi_buffer->buffer;
000000F7 9EFE01   LDHX   1,SP
000000FA 8B       PSHH   
000000FB 86       PULA   
000000FC E70E     STA    14,X
000000FE EF0F     STX    15,X
   51:       if (SPIS_SPRF) {
00000100 0F0008   BRCLR  7,SPIS,SPIS
   52:           *spi_buffer->p_write=SPID;
00000103 9EFE01   LDHX   1,SP
00000106 9ECE0C   LDHX   12,X
00000109 5E00     MOV    SPID,X+
   54:       if((spi_buffer->p_write++)==(&spi_buffer->buffer[NB_DATA-1])){
0000010B 9EFE01   LDHX   1,SP
0000010E 9ECE0C   LDHX   12,X
00000111 89       PSHX   
00000112 8B       PSHH   
00000113 AF01     AIX    #1
00000115 9F       TXA    
00000116 8B       PSHH   
00000117 9EFE04   LDHX   4,SP
0000011A E70D     STA    13,X
0000011C 86       PULA   
0000011D E70C     STA    12,X
0000011F AF0B     AIX    #11
00000121 9EE602   LDA    2,SP
00000124 87       PSHA   
00000125 9EE602   LDA    2,SP
00000128 87       PSHA   
00000129 9F       TXA    
0000012A 8B       PSHH   
0000012B 88       PULX   
0000012C CD0000   JSR    ICMP
0000012F A701     AIS    #1
00000131 A701     AIS    #1
00000133 2609     BNE    *+11       ;abs = 0x013E
   55:           spi_buffer->p_write=spi_buffer->buffer;
00000135 9EFE01   LDHX   1,SP
00000138 8B       PSHH   
00000139 86       PULA   
0000013A E70C     STA    12,X
0000013C EF0D     STX    13,X
   58:       spi_buffer->nb_data--;
0000013E 9EFE01   LDHX   1,SP
00000141 6A10     DEC    16,X
   43:   while (spi_buffer->nb_data!=0){
00000143 9EFE01   LDHX   1,SP
00000146 6D10     TST    16,X
00000148 2703     BEQ    *+5       ;abs = 0x014D
0000014A CC0007   JMP    spi_transfer
   60:   PTBD_PTBD5=1;
0000014D 1A00     BSET   5,PTBD
   61: }
0000014F A702     AIS    #2
00000151 81       RTS    
   64: void delai(unsigned short time){
delai:
00000152 A7FE     AIS    #-2
   66:   for (i = time; i > 0; i--) {
00000154 9EFF01   STHX   1,SP
00000157 200B     BRA    *+13       ;abs = 0x0164
00000159 9E6D02   TST    2,SP
0000015C 2603     BNE    *+5       ;abs = 0x0161
0000015E 9E6A01   DEC    1,SP
00000161 9E6A02   DEC    2,SP
00000164 9EFE01   LDHX   1,SP
00000167 650000   CPHX   #0x0000
0000016A 22ED     BHI    *-17       ;abs = 0x0159
   68: }
0000016C A702     AIS    #2
0000016E 81       RTS    

